package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.30

import (
	"context"
	"fmt"

	"com.cross-join.crossviewer.authservice/app/service/auth-api/graph/model"
)

// CreateClaim is the resolver for the createClaim field.
func (r *mutationResolver) CreateClaim(ctx context.Context, input *model.ClaimInput) (*model.Claim, error) {
	panic(fmt.Errorf("not implemented: CreateClaim - createClaim"))
}

// UpdateClaim is the resolver for the updateClaim field.
func (r *mutationResolver) UpdateClaim(ctx context.Context, id int, input *model.ClaimInput) (*model.Claim, error) {
	panic(fmt.Errorf("not implemented: UpdateClaim - updateClaim"))
}

// DeleteClaim is the resolver for the deleteClaim field.
func (r *mutationResolver) DeleteClaim(ctx context.Context, id int) (*model.Claim, error) {
	panic(fmt.Errorf("not implemented: DeleteClaim - deleteClaim"))
}

// Claims is the resolver for the claims field.
func (r *queryResolver) Claims(ctx context.Context) ([]*model.Claim, error) {
	panic(fmt.Errorf("not implemented: Claims - claims"))
}

// Claim is the resolver for the claim field.
func (r *queryResolver) Claim(ctx context.Context, id int) (*model.Claim, error) {
	panic(fmt.Errorf("not implemented: Claim - claim"))
}
