package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.30

import (
	"context"
	"fmt"

	"com.cross-join.crossviewer.authservice/app/service/auth-api/graph/model"
)

// CreateUser is the resolver for the createUser field.
func (r *mutationResolver) CreateUser(ctx context.Context, input model.UserInput) (*model.User, error) {
	panic(fmt.Errorf("not implemented: CreateUser - createUser"))
}

// UpdateUser is the resolver for the updateUser field.
func (r *mutationResolver) UpdateUser(ctx context.Context, id int, input model.UserInput) (*model.User, error) {
	panic(fmt.Errorf("not implemented: UpdateUser - updateUser"))
}

// DeleteUser is the resolver for the deleteUser field.
func (r *mutationResolver) DeleteUser(ctx context.Context, id int) (*model.User, error) {
	panic(fmt.Errorf("not implemented: DeleteUser - deleteUser"))
}

// AddUserToRoles is the resolver for the addUserToRoles field.
func (r *mutationResolver) AddUserToRoles(ctx context.Context, userID int, input *model.UserRolesInput) (*model.User, error) {
	panic(fmt.Errorf("not implemented: AddUserToRoles - addUserToRoles"))
}

// RemoveUserFromRoles is the resolver for the removeUserFromRoles field.
func (r *mutationResolver) RemoveUserFromRoles(ctx context.Context, userID int, input *model.UserRolesInput) (*model.User, error) {
	panic(fmt.Errorf("not implemented: RemoveUserFromRoles - removeUserFromRoles"))
}

// AddUserToGroups is the resolver for the addUserToGroups field.
func (r *mutationResolver) AddUserToGroups(ctx context.Context, userID int, input *model.UserGroupsInput) (*model.User, error) {
	panic(fmt.Errorf("not implemented: AddUserToGroups - addUserToGroups"))
}

// RemoveUserFromGroups is the resolver for the removeUserFromGroups field.
func (r *mutationResolver) RemoveUserFromGroups(ctx context.Context, userID int, input *model.UserGroupsInput) (*model.User, error) {
	panic(fmt.Errorf("not implemented: RemoveUserFromGroups - removeUserFromGroups"))
}

// Me is the resolver for the me field.
func (r *queryResolver) Me(ctx context.Context) (*model.User, error) {
	panic(fmt.Errorf("not implemented: Me - me"))
}

// Users is the resolver for the users field.
func (r *queryResolver) Users(ctx context.Context) ([]*model.User, error) {
	panic(fmt.Errorf("not implemented: Users - users"))
}

// User is the resolver for the user field.
func (r *queryResolver) User(ctx context.Context, id int) (*model.User, error) {
	panic(fmt.Errorf("not implemented: User - user"))
}
